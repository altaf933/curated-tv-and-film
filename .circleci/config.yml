defaults: &defaults
  #working_directory: ./circleci
  docker:
    - image: circleci/node:8

version: 2
jobs:
  prepare:
    <<: *defaults
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "main/package.json" }}
          - v1-dependencies-
      - run: cd main && npm install
      - save_cache:
          paths:
            - main/node_modules
          key: v1-dependencies-{{ checksum "main/package.json" }}
      - persist_to_workspace:
          root: .
          paths:
            - main/node_modules
  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: cd main && npm run build
      - persist_to_workspace:
          root: .
          paths:
            - main/build
  unit:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: cd main && npm test
  deploy-github:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - deploy:
          name: Deploy to GitHub Pages
          command: |
              set -e
              cd main
              remote=$(git config remote.origin.url)
              if [ ! -d "build" ]
              then
                  echo "build folder not found"
                  exit 1
              fi
              mkdir gh-pages-branch
              cd gh-pages-branch
              git config --global user.email "lmcjt@outlook.com" > /dev/null 2>&1
              git config --global user.name "Luke Taylor" > /dev/null 2>&1
              git init
              git remote add --fetch origin "$remote"
              if git rev-parse --verify origin/gh-pages > /dev/null 2>&1
              then
                  git checkout gh-pages
                  git rm -rf .
              else
                  git checkout --orphan gh-pages
              fi
              cp -a "../build/." .
              git add -A
              git commit --allow-empty -m "Deploy to GitHub pages [ci skip]"
              git push --force --quiet origin gh-pages > /dev/null 2>&1
              cd ..
              rm -rf gh-pages-branch
              echo "Finished GitHub pages Deployment!"

workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - prepare
      - build:
          requires:
            - prepare
      - unit:
          requires:
            - build
      - deploy-github:
          requires:
            - unit
          filters:
            branches:
              only: master
